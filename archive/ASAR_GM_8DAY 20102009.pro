; ######################################################################
; NAME: ASAR_GM_8DAY.pro
; LANGUAGE: IDL
; AUTHOR: Garth Warren 
; DATE: 22/09/2009
; DLM: 20/10/2009
; DESCRIPTION: Create 8-day ASAR GM SSM composite binary files.
; INPUT: Daily ASAR GM SSM binary data.
; OUTPUT: 8-day median ASAR GM SSM flat binary data.
; SET PARAMETERS:
;   MANIPULATE FILE: YYY, MMM, DDD
;   DATE LOOP: SA (Start Date), EA (End Date)
;   MAKE ARRAY LOOP: Number of loops (currently set to 10), COLVALUE (original
;       array size divided by the number of loops
;   FILL LOOP: File manipulation (NAME, ROOT, PATH)  
;   CALCULATE & WRITE: NoData value (currently set to -9.0),
;       OUTPATH, OUTNAMEA, SUBDIRECTORY   
; ######################################################################
;
PRO ASAR_GM_8DAY
  PRINT,''
  PRINT,'BEGIN PROCESSING: ASAR_GM_8DAY'
  PRINT,'GET FILE NAME LIST' 
  ; GET FILE NAMES
  ALLFILENAME = FILE_SEARCH("R:/ASAR_GM/ENVI_daily/Australia_BINARY_TransponseB4Saving/", "*.bin", COUNT=COUNT)
  ;
  ; MANIPULATE FILE NAMES TO GET DATE
  YYY = STRMID(ALLFILENAME, 76, 4)
  MMM = STRMID(ALLFILENAME, 80, 2)
  DDD = STRMID(ALLFILENAME, 82, 2)
  DMY = JULDAY(MMM, DDD, YYY)
  ;
  ; SETUP DATE LOOP
  SA = JULDAY(12, 8, 2004) ; (M,D,YYYY)
  DA = 8
  EA = JULDAY(12, 19, 2004)
  VA = SA
  ;
  ; DATE LOOP
  WHILE (VA = VA + DA) LE EA DO BEGIN
    T_DATE = SYSTIME(1)
    DRS = (VA - DA)
    PRINT,''
    PRINT,'DATE LOOP: START'  
    ; RELATIONAL STATEMENT TO GET DATE RANGE
    INDEX = WHERE(((DMY LT VA) AND (DMY GE DRS)), COUNT)
    ; GET FILES IN DATE RANGE
    FILENAME = ALLFILENAME[INDEX]
    PRINT,''
    PRINT, FILENAME
    PRINT,'' 
    PRINT, 'NO. OF FILES: ', COUNT
    ; SET COUNT VARIABLE
    COUNTSPLIT = COUNT
    ;
    ; WRITE NEW EMPTY OUTPUT FILE
    PRINT, 'WRITE NEW EMPTY OUTPUT FILE'
    ; SET THE OUTPUT FILE PATH AND NAME
    ; OUTPUT PATH
    OUTPATH = 'R:/ASAR_GM/ENVI_daily/working_temp/'
    ; OUTPUT NAME PART 1
    OUTNAMEA = 'TUW_ASAGW_SSM_002_8DAY_'
    ; OUTPUT NAME PART 2 FILL NAME WITH DATE RANGE
    OUTNAMEBa = STRTRIM(DRS, 2)
    CALDAT, OUTNAMEBa, Month, Day, Year
    IF Day LE 9 THEN Day = (STRING(0) + STRING(STRTRIM(Day, 2))) ELSE Day = Day
    OUTNAMEB = STRTRIM(Day, 2) + STRTRIM(Month, 2) + STRTRIM(Year, 2) + '_TO_'
    PRINT, 'START DATE: ', OUTNAMEB
    ;
    OUTNAMECa = STRTRIM(VA, 2)
    CALDAT, OUTNAMECa, Month, Day, Year
    IF Day LE 9 THEN Day = (STRING(0) + STRING(STRTRIM(Day, 2))) ELSE Day = Day
    OUTNAMEC = STRTRIM(Day, 2) + STRTRIM(Month, 2) + STRTRIM(Year, 2)
    PRINT, 'END DATE: ', OUTNAMEC
    ; BUILD NAME
    OUTNAME = OUTNAMEA + OUTNAMEB + OUTNAMEC + '.bin'
    ; BUILD NAME WITH PATH
    OUTPATHOUTNAME = OUTPATH + OUTNAMEA + OUTNAMEB + OUTNAMEC + '.bin'
    ; SET FUNCTION 'FILEPATH'
    OUTFILE = FILEPATH(OUTNAME, ROOT_DIR='R:\', SUBDIRECTORY='ASAR_GM\ENVI_daily\working_temp') 
    PRINT, 'OUTPUT: ', OUTPATHOUTNAME
    ; CREATE THE FILE 
    OPENW, UNIT, OUTFILE, /GET_LUN
    ; CLOSE THE FILE
    FREE_LUN, UNIT
    ;
    PRINT,''
    PRINT,'DATE LOOP: END'
    ;
    ; MAKE ARRAY LOOP
    FOR i=0, 10-1 DO BEGIN
      PRINT,''
      PRINT,'MAKE ARRAY LOOP: START'  
      ; SET ARRAY COLUMN VALUE (71380580/10)=7138058
      COLVALUE = 7138058
      ; SET FILL ARRAY POSITION VALUES
      ENDPOSa = (i+1)*COLVALUE
      ONE = 1
      ENDPOS = ENDPOSa-ONE    
      STARTPOS =  ENDPOSa-COLVALUE
      PRINT, 'START: ', STARTPOS
      PRINT, 'END: ', ENDPOS
      ; CREATE ARRAY
      MATRIX = MAKE_ARRAY(COLVALUE, COUNTSPLIT, /INTEGER)
      ;
      PRINT,'MAKE ARRAY LOOP: END'
      ;
      ; FILL ARRAY LOOP  
      FOR k=0, COUNTSPLIT-1 DO BEGIN
        PRINT,''
        PRINT,'FILL ARRAY LOOP: START'
        ; SET THE INPUT FILE PATH AND NAME      
        NAME = STRMID(FILENAME[k], 58, 44)
        ROOT = 'R:\'
        PATH = STRMID(FILENAME[k], 3, 55)
        PRINT, 'OPEN FILE AND INSERT DATA: ', NAME
        FILEOPEN = FILEPATH(NAME, ROOT_DIR=ROOT, SUBDIRECTORY=PATH)
        OUT = READ_BINARY(FILEOPEN, DATA_TYPE=1)
        ; FILL ARRAY       
        MATRIX[*,k] = OUT(STARTPOS:ENDPOS)
        PRINT,'FILL ARRAY LOOP: END'
      ENDFOR
      ; CALCULATE & WRITE
      PRINT,''
      PRINT, 'CALCULATE ARRAY MEDIAN & WRITE'
      ; SET NODATA VALUES TO NaN IN MATRIX
      j = WHERE(MATRIX EQ -9.000, COUNT)
      IF (COUNT GT 0) THEN MATRIX[j] = !VALUES.F_NAN
      ; GET MEDIAN
      OUTMEDIAN = MEDIAN(MATRIX, DIMENSION=2, /EVEN)
      ; CONVERT MEDIAN ARRAY TO INTEGER
      OUTMEDIANINT = FIX(OUTMEDIAN)
      ; CONVERT MEDIAN ARRAY TO BYTE
      OUTMEDIANBYTE = BYTE(OUTMEDIANINT)
      ; OPEN OUTPUT FILE
      OPENU, UNIT, OUTFILE, /APPEND, /GET_LUN
      ; WRITE TO THE OUTPUT FILE
      WRITEU, UNIT, OUTMEDIANBYTE
      ; CLOSE THE OUTPUT FILE
      FREE_LUN, UNIT
    ENDFOR
    ; PRINT PROCESSING TIME
    MINUTES = (SYSTIME(1)-T_DATE)/60
    PRINT, MINUTES,' MINUTES FOR: ', OUTNAME
  ENDWHILE
  PRINT,''
  PRINT, 'FINISHED PROCESSING: ASAR_GM_8DAY'
END