; ######################################################################
; NAME: OWL_INUNDATION_ACCUMULATION_MAPPER_temp.pro
; LANGUAGE: IDL
; AUTHOR: JUAN PABLO GUERSCHMAN, MODIFIED BY GARTH WARREN
; DATE: 05/11/2009
; DLM: 17/11/2009
; DESCRIPTION: THIS TOOL CREATES AN INUNDATION ACCUMULATION MAP (IMAGE)
;              BASED ON USER SELECTED PARAMETERS.
; INPUT: ONE SINGLE-BAND IMAGE OR ONE MULTI-BAND IMAGE.
; OUTPUT: ONE IMAGE THAT SHOWS THE ACCUMULATION OF NO DATA VALUES. ONE
;         ACCUMULATION IMAGE BASED ON THE USER-SELECTED EXPRESSION.
; SET PARAMETERS: INPUT IS VIA WIDGETS.
; NOTES:
; ######################################################################
; 
PRO OWL_INUNDATION_ACCUMULATION_MAPPER_temp
  ; GET START TIME FOR WHOLE
  F_TIME = SYSTIME(1)
  PRINT,''
  PRINT,'BEGIN PROCESSING: OWL_INUNDATION_ACCUMULATION_MAPPER'
  ;---------------------------------------------------------------------
  ; DEFINE THE INPUT IMAGE DATA (SINGLE BAND IMAGE OR MULTIBAND IMAGE)
  ENVI_SELECT, TITLE='SELECT INPUT IMAGE DATA', FID=FID, POS=POS
  ; CHECK WHETHER THE INPUT IMAGE DATA NAME AND PATH IS VALID
  IF (FID EQ -1) THEN BEGIN
    PRINT,''
    PRINT, 'THE SELECTED INPUT FILE IS NOT VALID'
    PRINT,''
    RETURN
  ENDIF
  ENVI_FILE_QUERY, FID, BNAME=BNAME, SNAME=SNAME, NB=NB, NS=NS, NL=NL, DATA_TYPE=DATA_TYPE
  ; COUNT THE NUMBER OF BANDS IN THE INPUT FILE
  RESULT = WHERE(BNAME, COUNT)
  BCOUNT = COUNT
  PRINT, 'NUMBER OF BANDS: ', BCOUNT
  ; GET DIMENSIONS
  DIMS = [-1, 0, NS-1, 0, NL-1]
  PRINT, 'IMAGE DIMENSIONS: ', DIMS
  ; GET MAP INFO
  MAP_INFO = ENVI_GET_MAP_INFO(FID=FID)
  ;---------------------------------------------------------------------
  ; SET THE OUTPUT DIRECTORY
  OUTPATH = ENVI_PICKFILE(TITLE='SELECT OUTPUT FOLDER', /DIRECTORY)
  ; SET OUTPUT NAME PART 1
  SNAME = 'MODIS_OWL_MASKED_ACCUMULATION_OWL_'
  ; BUILD THE OUTPUT FILENAMES
  OUTFILE1 = OUTPATH + '\' + SNAME + 'GE_50'
  OUTFILE2 = OUTPATH + '\' + SNAME + 'GE_60'
  OUTFILE3 = OUTPATH + '\' + SNAME + 'GE_70'
  OUTFILE4 = OUTPATH + '\' + SNAME + 'GE_80'
  OUTFILE5 = OUTPATH + '\' + SNAME + 'GE_90'
  OUTFILE6 = OUTPATH + '\' + SNAME + 'EQ_100'  
  OUTFILE7 = OUTPATH + '\' + SNAME + 'GE_0_LT_5'
  OUTFILE8 = OUTPATH + '\' + SNAME + 'GE_5_LT_10'
  OUTFILE9 = OUTPATH + '\' + SNAME + 'GE_10_LT_20'
  OUTFILE10 = OUTPATH + '\' + SNAME + 'GE_20_LT_30'
  OUTFILE11 = OUTPATH + '\' + SNAME + 'GE_30_LT_40'
  OUTFILE12 = OUTPATH + '\' + SNAME + 'GE_40_LT_50'
  OUTFILE13 = OUTPATH + '\' + SNAME + 'GE_50_LT_60'
  OUTFILE14 = OUTPATH + '\' + SNAME + 'GE_60_LT_70'
  OUTFILE15 = OUTPATH + '\' + SNAME + 'GE_70_LT_80'
  OUTFILE16 = OUTPATH + '\' + SNAME + 'GE_80_LT_90'
  OUTFILE17 = OUTPATH + '\' + SNAME + 'GE_90_LT_100'
  ;---------------------------------------------------------------------
  ; CREATE EMPTY ARRAY
  ACUM_OWL1 = LONARR(NS, NL)
  ACUM_OWL2 = LONARR(NS, NL)
  ACUM_OWL3 = LONARR(NS, NL)
  ACUM_OWL4 = LONARR(NS, NL)
  ACUM_OWL5 = LONARR(NS, NL)
  ACUM_OWL6 = LONARR(NS, NL)
  ACUM_OWL7 = LONARR(NS, NL)
  ACUM_OWL8 = LONARR(NS, NL)
  ACUM_OWL9 = LONARR(NS, NL)
  ACUM_OWL10 = LONARR(NS, NL)
  ACUM_OWL11 = LONARR(NS, NL)
  ACUM_OWL12 = LONARR(NS, NL)
  ACUM_OWL13 = LONARR(NS, NL)
  ACUM_OWL14 = LONARR(NS, NL)
  ACUM_OWL15 = LONARR(NS, NL)
  ACUM_OWL16 = LONARR(NS, NL)
  ACUM_OWL17 = LONARR(NS, NL)
  ACUM_OWL_NE255 = LONARR(NS, NL)
  ACUM_OWL_EQ255 = LONARR(NS, NL)
  ;-----------------------------------------------------------------
  ; LOOP THROUGH EACH BAND
  FOR i=0, BCOUNT-1 DO BEGIN ; START 'FOR i'
    ; GET START TIME FOR LOOP
    T_TIME = Systime(1)
    ;
    ; GET BAND DATA
    OWL_IN = ENVI_GET_DATA(FID=FID, POS=i, DIMS=DIMS)
    ; ADD THE VALUE OF THE EXPRESSION TO THE VARIABLES 'ACUM_OWL' AND 'ACUM_OWL_NE255'
    ; ACCUMULATION OF VALUES BASED ON THE USER-SELECTED EXPRESSION (AND NOT EQUAL TO 255)
    ; i.e. ADD CELL TO ARRAY IF IT MEETS THE EXPRESSION THRESHOLD FOR THIS BAND/DATE $
    ;      AFTER THE LAST DATE/BAND THE ARRAY FREQ_OWL IS MADE-UP OF CELLS THAT HAVE $
    ;      ACHIEVED THE EXPRESSION THRESHOLD AT LEAST ONCE DURING THE TIME-SERIES.
    ACUM_OWL1 += ((OWL_IN GE 50) AND (OWL_IN NE 255))
    ACUM_OWL2 += ((OWL_IN GE 60) AND (OWL_IN NE 255))
    ACUM_OWL3 += ((OWL_IN GE 70) AND (OWL_IN NE 255))
    ACUM_OWL4 += ((OWL_IN GE 80) AND (OWL_IN NE 255))
    ACUM_OWL5 += ((OWL_IN GE 90) AND (OWL_IN NE 255))
    ACUM_OWL6 += ((OWL_IN EQ 100) AND (OWL_IN NE 255))
    ACUM_OWL7 += (((OWL_IN GE 0) AND (OWL_IN LT 5)) AND (OWL_IN NE 255))
    ACUM_OWL8 += (((OWL_IN GE 5) AND (OWL_IN LT 10)) AND (OWL_IN NE 255))
    ACUM_OWL9 += (((OWL_IN GE 10) AND (OWL_IN LT 20)) AND (OWL_IN NE 255))
    ACUM_OWL10 += (((OWL_IN GE 20) AND (OWL_IN LT 30)) AND (OWL_IN NE 255))
    ACUM_OWL11 += (((OWL_IN GE 30) AND (OWL_IN LT 40)) AND (OWL_IN NE 255))
    ACUM_OWL12 += (((OWL_IN GE 40) AND (OWL_IN LT 50)) AND (OWL_IN NE 255))
    ACUM_OWL13 += (((OWL_IN GE 50) AND (OWL_IN LT 60)) AND (OWL_IN NE 255))
    ACUM_OWL14 += (((OWL_IN GE 60) AND (OWL_IN LT 70)) AND (OWL_IN NE 255))
    ACUM_OWL15 += (((OWL_IN GE 70) AND (OWL_IN LT 80)) AND (OWL_IN NE 255))
    ACUM_OWL16 += (((OWL_IN GE 80) AND (OWL_IN LT 90)) AND (OWL_IN NE 255))
    ACUM_OWL17 += (((OWL_IN GE 90) AND (OWL_IN LT 100)) AND (OWL_IN NE 255))
    ;  
    ; ACCUMULATION OF VALUES NOT EQUAL TO 255
    ACUM_OWL_NE255 += (OWL_IN NE 255)
    ; ACCUMULATION OF VALUES EQUAL TO 255
    ACUM_OWL_EQ255 += (OWL_IN EQ 255)
    ;
    ; PRINT THE LOOP PROCESSING TIME
    SECONDS = (SYSTIME(1)-T_TIME)
    PRINT,''
    PRINT, SECONDS,'  SECONDS FOR BAND ', i+1, ' OF ', BCOUNT
    ;
  ENDFOR ; END 'FOR i' ROI
  ;-----------------------------------------------------------------
  ; SET VALUE '1.0' TO ALL ELEMENTS IN 'ACUM_OWL_NE255'
  ACUM_OWL_NE255 *= 1.0
  ACUM_OWL_ALL = (ACUM_OWL_EQ255 + ACUM_OWL_NE255)*1.0
  OWL_EQ255 = Fix(((ACUM_OWL_EQ255/ACUM_OWL_ALL)*100+0.5))
  ;
  OWL_EXP1 = FIX(((ACUM_OWL1/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP2 = FIX(((ACUM_OWL2/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP3 = FIX(((ACUM_OWL3/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP4 = FIX(((ACUM_OWL4/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP5 = FIX(((ACUM_OWL5/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP6 = FIX(((ACUM_OWL6/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP7 = FIX(((ACUM_OWL7/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP8 = FIX(((ACUM_OWL8/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP9 = FIX(((ACUM_OWL9/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP10 = FIX(((ACUM_OWL10/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP11 = FIX(((ACUM_OWL11/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP12 = FIX(((ACUM_OWL12/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP13 = FIX(((ACUM_OWL13/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP14 = FIX(((ACUM_OWL14/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP15 = FIX(((ACUM_OWL15/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP16 = FIX(((ACUM_OWL16/ACUM_OWL_NE255)*100+0.5))
  OWL_EXP17 = FIX(((ACUM_OWL17/ACUM_OWL_NE255)*100+0.5))
  ;-----------------------------------------------------------------
  ; SAVE DATA TO OUTPUT
  ENVI_WRITE_ENVI_FILE, OWL_EXP1, OUT_NAME=OUTFILE1, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP2, OUT_NAME=OUTFILE2, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP3, OUT_NAME=OUTFILE3, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP4, OUT_NAME=OUTFILE4, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP5, OUT_NAME=OUTFILE5, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP6, OUT_NAME=OUTFILE6, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP7, OUT_NAME=OUTFILE7, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP8, OUT_NAME=OUTFILE8, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP9, OUT_NAME=OUTFILE9, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP10, OUT_NAME=OUTFILE10, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP11, OUT_NAME=OUTFILE11, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP12, OUT_NAME=OUTFILE12, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP13, OUT_NAME=OUTFILE13, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP14, OUT_NAME=OUTFILE14, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP15, OUT_NAME=OUTFILE15, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP16, OUT_NAME=OUTFILE16, MAP_INFO=MAP_INFO
  ENVI_WRITE_ENVI_FILE, OWL_EXP17, OUT_NAME=OUTFILE17, MAP_INFO=MAP_INFO
  ;-----------------------------------------------------------------
  PRINT,''
  ; PRINT THE PROCESSING TIME
  MINUTES = (SYSTIME(1)-F_TIME)/60
  PRINT, MINUTES,'  MINUTES'
  PRINT,''
  PRINT,'FINISHED PROCESSING: OWL_ACCUMULATION_FREQUENCY_MAPPER'
  PRINT,'' 
END  