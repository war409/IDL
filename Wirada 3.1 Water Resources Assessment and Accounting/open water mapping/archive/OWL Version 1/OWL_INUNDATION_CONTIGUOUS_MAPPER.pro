; ######################################################################
; NAME: OWL_INUNDATION_CONTIGUOUS_MAPPER.pro
; LANGUAGE: ENVI IDL
; AUTHOR: JUAN PABLO GUERSCHMAN & GARTH WARREN
; DATE: 06/11/2009
; DLM: 10/12/2009
; DESCRIPTION: THIS TOOL CREATES AN INUNDATION CONTIGUOUS PERIOD IMAGE BASED  
;              ON USER-SELECTED PARAMETERS. CONTIGUOUS INUNDATION IS MAPPED
;              BY-TIME-SERIES. A CELL IS CLASSIFIED AS BEING INUNDATED FOR
;              A CONTIGUOUS PERIOD IF THE OWL VALUE IS EQ, GT, GE, LT OR LE 
;              A USER-SELECTED OWL THRESHOLD FOR A MINIMUM PERIOD OF TIME, AS
;              SPECIFIED BY A USER-SELECTED DURATION THRESHOLD. IF FOR A GIVEN 
;              CELL LOCATION THE OWL THRESHOLD AND THE DURATION THRESHOLD WAS
;              SATISFIED AT LEAST ONCE DURING THE TIME-SERIES THAT CELL IS SAID 
;              TO HAVE HAD A CONTIGUOUS INUNDATION EVENT AND IS GIVEN A VALUE OF
;              1. IF NOT, THE CELL IS GIVEN A VALUE OF 0.
; INPUT: ONE SINGLE-BAND IMAGE OR ONE MULTI-BAND IMAGE.
; OUTPUT: ONE IMAGE.
; PARAMETERS: INPUT IS VIA WIDGETS.
; NOTES: AT THE CELL LEVEL; IF A SINGLE DATE WITHIN A CONTIGUOUS INUNDATION 
;        PERIOD HAS CLOUD COVER BUT WAS INUNDATED (AS SPECIFIED BY THE THRESHOLD) 
;        ON THE PREVIOUS DATE AND ON THE FOLLOWING DATE THAT CELL IS STILL SAID TO 
;        BE INUNDATED. FOR EXAMPLE, SAY A CONTIGUOUS ‘EVENT’ IS DEFINED AS BEING A 
;        PERIOD OF MORE THAN 5 DATES WHERE THE OWL IS MORE THAN 75 PERCENT. IF A 
;        CELL WAS INUNDATED FOR 3 DATES IN A ROW FOLLOWED BY A SINGLE CLOUD COVER 
;        DATE AND TWO MORE INUNDATION DATES – AS THE CELL WAS MOST CERTAINLY 
;        INUNDATED DURING THE SINGLE CLOUD COVER DATE IT IS DEFINED AS SUCH FOR 
;        THE PURPOSE OF IDENTIFYING CONTIGUOUS PERIODS. HOWEVER, WHERE THERE IS 
;        MORE THAN 1, OR THERE ARE MULTIPLE CLOUD COVER DATES IN ANY CONTIGUOUS 
;        PERIOD THE CLOUD DATES ARE NOT DEFINED AS BEING INUNDATED.
; ######################################################################
; 
PRO OWL_INUNDATION_CONTIGUOUS_MAPPER
  ; GET START TIME
  F_TIME = SYSTIME(1)
  PRINT,''
  PRINT,'BEGIN PROCESSING: OWL_INUNDATION_CONTIGUOUS_MAPPER'
  ;---------------------------------------------------------------------
  ; DEFINE THE INPUT IMAGE DATA (SINGLE BAND IMAGE OR MULTIBAND IMAGE)
  ENVI_SELECT, TITLE='SELECT INPUT IMAGE DATA', FID=FID, POS=POS
  ; CHECK WHETHER THE INPUT IMAGE DATA NAME AND PATH IS VALID
  IF (FID EQ -1) THEN BEGIN
    PRINT,''
    PRINT, 'THE SELECTED INPUT FILE IS NOT VALID'
    PRINT,''
    RETURN
  ENDIF
  ;---------------------------------------------------------------------
  ; COUNT THE NUMBER OF BANDS IN THE INPUT FILE
  ENVI_FILE_QUERY, FID, BNAME=BNAME, SNAME=SNAME, NB=NB, NS=NS, NL=NL, DATA_TYPE=DATA_TYPE  
  RESULT = WHERE(BNAME, COUNT)
  BCOUNT = COUNT
  PRINT, 'NUMBER OF BANDS: ', BCOUNT
  ; GET DIMENSIONS
  DIMS = [-1, 0, NS-1, 0, NL-1]
  PRINT, 'IMAGE DIMENSIONS: ', DIMS
  ; GET MAP INFO
  MAP_INFO = ENVI_GET_MAP_INFO(FID=FID)
  ;---------------------------------------------------------------------
  ; DEFINE OPERATOR
  OP_BASE = WIDGET_AUTO_BASE(TITLE='DEFINE...')
  LIST=['EQ','LE','LT','GE','GT']
  WO_OP = WIDGET_PMENU(OP_BASE, LIST=LIST, uvalue='OUTOP', $
    PROMPT='SELECT AN OPERATOR', XSIZE=20, /AUTO)  
  RESULT_OP = AUTO_WID_MNG(OP_BASE) 
  IF (RESULT_OP.ACCEPT EQ 0) THEN BEGIN
    PRINT,''
    PRINT, 'THE SELECTED OPERATOR IS NOT VALID'
    PRINT,''
    RETURN
  ENDIF ELSE BEGIN
    OPER = LIST(RESULT_OP.OUTOP)
    PRINT, 'OPERATOR: ', OPER
  ENDELSE
  ;---------------------------------------------------------------------
  ; SET PARAMETER
  PA_BASE = WIDGET_AUTO_BASE(TITLE='DEFINE...')
  WO_PA = WIDGET_PARAM(PA_BASE, DT=2, UVALUE='PARAM', $
    PROMPT='ENTER A PARAMETER', XSIZE=18, /AUTO)
  RESULT_PA = AUTO_WID_MNG(PA_BASE)
  IF (RESULT_PA.ACCEPT EQ 0) THEN BEGIN
    PRINT,''
    PRINT, 'THE SELECTED PARAMETER IS NOT VALID'
    PRINT,''
    RETURN
  ENDIF ELSE BEGIN
    PARAM = FIX(RESULT_PA.PARAM)
    PRINT, 'PARAMETER VALUE = ', STRTRIM(PARAM, 2)
  ENDELSE
  ;---------------------------------------------------------------------
  ; PRINT EXPRESSION
  PRINT,''
  PRINT, '  EXPRESSION: (OWL ', OPER, ' ', STRTRIM(PARAM, 2),')'
  PRINT,''
  ;---------------------------------------------------------------------
  ; SET LENGTH OF CONTIGUOUS PERIOD
  ; SET PARAMETER
  PA_BASE2 = WIDGET_AUTO_BASE(TITLE='DEFINE...')
  WO_PA2 = WIDGET_PARAM(PA_BASE2, DT=2, UVALUE='PARAM2', $
    PROMPT='ENTER A PARAMETER (MIN LENGTH OF CONTIGUOUS PERIOD (MULTIPLE OF 8 DAYS))', XSIZE=18, /AUTO)
  RESULT_PA2 = AUTO_WID_MNG(PA_BASE2)
  IF (RESULT_PA2.ACCEPT EQ 0) THEN BEGIN
    PRINT,''
    PRINT, 'THE SELECTED PARAMETER IS NOT VALID'
    PRINT,''
    RETURN
  ENDIF ELSE BEGIN
    PARAM2 = FIX(RESULT_PA2.PARAM2)
    PRINT,''
    PRINT, '  EXPRESSION: (OWL ', OPER, ' ', STRTRIM(PARAM, 2), ' FOR AT LEAST: ', STRTRIM(PARAM2, 2), ' DAYS',')'
    MIN_CONTIGUOUS = (PARAM2/8)
  ENDELSE
  ;---------------------------------------------------------------------
  ; DEFINE OUTPUT FILE
  BASE = WIDGET_AUTO_BASE(TITLE='SELECT OUTPUT FILE')
  WO = WIDGET_OUTFM(BASE, UVALUE='OUTFILE1', /AUTO) 
  RESULT_OUT1 = AUTO_WID_MNG(BASE)
  IF (RESULT_OUT1.ACCEPT EQ 0) THEN BEGIN
    PRINT,''
    PRINT, 'THE SELECTED OUTPUT FILE IS NOT VALID'
    PRINT,''
    RETURN
  ENDIF
  IF ((RESULT_OUT1.OUTFILE1.IN_MEMORY) EQ 1) THEN $
    PRINT, 'OUTPUT TO MEMORY' ELSE PRINT, 'SELECTED OUTPUT FILE: ', RESULT_OUT1.OUTFILE1.NAME
  ;---------------------------------------------------------------------
  ; CREATE EMPTY ARRAY
  ACUM_DURATION = LONARR(NS, NL)
  ACUM_CONTIGUOUS = LONARR(NS, NL)
  OUT = LONARR(NS, NL)
  ;---------------------------------------------------------------------
  ; LOOP THROUGH EACH BAND
  FOR i=0, BCOUNT-1 DO BEGIN ; START 'FOR i'
    ; GET START TIME FOR LOOP
    T_TIME = Systime(1)
    ;-------------------------------------------------------------------
    ; GET CURRENT BAND DATA
    OWL_IN = ENVI_GET_DATA(FID=FID, POS=i, DIMS=DIMS)
    ;-------------------------------------------------------------------
    ; ADD TO THE ARRAY IF THE CELL MEETS THE EXPRESSION CRITERIA AT THIS 
    ; BAND/DATE COMBINATION. AFTER THE LAST DATE/BAND THE ARRAY ACUM_DURATION 
    ; IS MADE-UP OF CELLS THAT HAVE MET THE CRITERIA AT LEAST ONCE DURING 
    ; THE TIME-SERIES.
    ;-------------------------------------------------------------------
    IF i LT 1 THEN BEGIN
      ACUM_DURATION *= 0
      ACUM_CONTIGUOUS *= 0
    ENDIF ELSE BEGIN
      ;-----------------------------------------------------------------
      ; GET PREVIOUS BAND DATA
      OWL_IN_PREV = ENVI_GET_DATA(FID=FID, POS=(i-1), DIMS=DIMS)
      ;-----------------------------------------------------------------
      IF (OPER EQ 'EQ') AND (PARAM EQ 255) THEN ACUM_DURATION += ((OWL_IN EQ STRTRIM(PARAM, 2))  $
        AND (OWL_IN_PREV EQ STRTRIM(PARAM, 2)))
      IF (OPER EQ 'EQ') AND (PARAM NE 255) THEN ACUM_DURATION += (((OWL_IN EQ STRTRIM(PARAM, 2)) AND (OWL_IN NE 255)) $
        AND ((OWL_IN_PREV EQ STRTRIM(PARAM, 2)) AND (OWL_IN_PREV NE 255)))  
      IF OPER EQ 'LE' THEN ACUM_DURATION += (((OWL_IN LE STRTRIM(PARAM, 2)) AND (OWL_IN NE 255)) $ 
        AND ((OWL_IN_PREV LE STRTRIM(PARAM, 2)) AND (OWL_IN_PREV NE 255))) 
      IF OPER EQ 'LT' THEN ACUM_DURATION += (((OWL_IN LT STRTRIM(PARAM, 2)) AND (OWL_IN NE 255)) $ 
        AND ((OWL_IN_PREV LT STRTRIM(PARAM, 2)) AND (OWL_IN_PREV NE 255)))  
      IF OPER EQ 'GE' THEN ACUM_DURATION += (((OWL_IN GE STRTRIM(PARAM, 2)) AND (OWL_IN NE 255)) $ 
        AND ((OWL_IN_PREV GE STRTRIM(PARAM, 2)) AND (OWL_IN_PREV NE 255)))
      IF OPER EQ 'GT' THEN ACUM_DURATION += (((OWL_IN GT STRTRIM(PARAM, 2)) AND (OWL_IN NE 255)) $ 
        AND ((OWL_IN_PREV GT STRTRIM(PARAM, 2)) AND (OWL_IN_PREV NE 255)))
    ENDELSE
    ;-------------------------------------------------------------------
    ; RETURN '1' IF CONTIGUOUS PERIOD IS GE THE THRESHOLD
    ACUM_CONTIGUOUS += (ACUM_DURATION GE STRTRIM(MIN_CONTIGUOUS, 2))
    ;-------------------------------------------------------------------
    ; PRINT THE LOOP PROCESSING TIME
    SECONDS = (SYSTIME(1)-T_TIME)
    PRINT,''
    PRINT, SECONDS,'  SECONDS FOR BAND; ', i+1, ' OF ', STRTRIM(BCOUNT, 2)
    ;-------------------------------------------------------------------
  ENDFOR ; END 'FOR i' ROI
  ;---------------------------------------------------------------------
  ; GET RESULTS. BY-CELL, RETURN '1' IF THERE WAS AT LEAST 1 CONTIGUOUS 
  ; PERIOD AT THE CELL LOCATION.
  OUT += (ACUM_CONTIGUOUS GE 1)
  OWL_EXP = FIX(OUT)
  ;---------------------------------------------------------------------
  ; SAVE DATA TO OUTPUT
  FNAME = RESULT_OUT1.OUTFILE1.NAME
  ENVI_WRITE_ENVI_FILE, OWL_EXP, OUT_NAME=FNAME, MAP_INFO=MAP_INFO, /NO_OPEN
  ;---------------------------------------------------------------------
  ; PRINT THE PROCESSING TIME
  PRINT,''
  MINUTES = (SYSTIME(1)-F_TIME)/60
  PRINT, MINUTES,'  MINUTES'
  PRINT,''
  PRINT,'FINISHED PROCESSING: OWL_INUNDATION_CONTIGUOUS_MAPPER'
  PRINT,'' 
END